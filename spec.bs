<pre class="metadata">
Title: Third Party Cookie Deprecation Exemption Heuristics
Shortname: 3pcd-exemption-heuristics
Repository: amaliev/3pcd-exemption-heuristics
URL: https://github.com/amaliev/3pcd-exemption-heuristics/
Editor: Anton Maliev, w3cid 148669, Google https://google.com/, amaliev@google.com
Abstract: This specification defines third-party cookie deprecation heuristics, how browsers can detect them, and how browsers can grant storage access on detection.
Status Text: This specification is intended to be migrated (possibly to the web compat specification).
Text Macro: LICENSE <a href=http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document>W3C Software and Document License</a>
Group: privacycg
Status: CG-DRAFT
Level: None
Complain About: accidental-2119 yes, missing-example-ids yes
Markup Shorthands: markdown yes, css no
Assume Explicit For: yes
Metadata Order: !*, *, This version

!Participate: <a href="https://github.com/[REPOSITORY]">Github Repository</a>
!Participate: <a href="https://github.com/privacycg/meetings/">Privacy CG Meetings</a>
</pre>
<pre class="biblio">
{
    "MDN-STORAGE-ACCESS": {
        "title": "Storage access policy: Block cookies from trackers",
        "href": "https://developer.mozilla.org/en-US/docs/Web/Privacy/Storage_Access_Policy#automatic_storage_access_upon_interaction"
    },
    "WEBKIT-STORAGE-ACCESS": {
        "title": "Intelligent Tracking Prevention 2.0",
        "href": "https://webkit.org/blog/8311/intelligent-tracking-prevention-2-0/#:~:text=Temporary%20Compatibility%20Fix%3A%20Automatic%20Storage%20Access%20for%20Popups"
    }
}
</pre>
<pre class="anchors">

</pre>

<h2 id="sa-heuristics-alternatives">Alternatives</h2>

Similar heuristics have been implemented by Firefox ([[MDN-STORAGE-ACCESS inline]])
and Safari ([[WEBKIT-STORAGE-ACCESS inline]]).

<h2 id="sa-heuristics-section">Storage Access Heuristics</h2>

Browsers are working to deprecate third-party cookies while avoiding user-facing
breakage by removing support for common web patterns, particularly login flows via
third-party identity providers. Browsers can observe <code>Storage access heuristics</code>
from the user in order to provide short-term storage access to unbreak these flows.

<h3 id="sa-heuristics-constants">Constants</h3>

The <dfn>popup heuristic grant duration</dfn> is an [=implementation-defined=]
[=duration=] that represents the length of time after the popup heuristic is
detected that the popup [=host=] will have access to the opener [=host=].

Note: 30 days is a reasonable [=popup heuristic grant duration=] value.

The <dfn>redirect heuristic grant duration</dfn> is an [=implementation-defined=]
[=duration=] that represents the length of time after the redirect heuristic is
detected that the bounced [=host=] will have access to the final [=host=].

Note: 15 minutes is a reasonable [=redirect heuristic grant duration=] value.

<h3 id="sa-heuristics-grant">Storage Access Grant</h3>

Define a [=powerful feature=] identified by the [=powerful feature/name=]
"storage-access-heuristics", with the following [=permission key type=]:

A [=permission key=] of the "storage-access-heuristics" feature is a [=tuple=] consisting
of a [=host=] <dfn property>top-level</dfn> and a [=host=] <dfn property>requester</dfn>.

<div algorithm>

To <dfn>grant access for heuristics</dfn> given a [=host=] |host|, [=host=]
|firstPartyHost|, and [=duration=] |duration|, perform the following steps:

1. Let |key| be a [=permission key=] with <var ignore>top-level</var> set to |firstPartyHost|
    and <var ignore>requester</var> set to |host|.
1. Queue a task on the [=current settings object=]'s [=responsible event loop=] to:
    1. [=Set a permission store entry=] with:
        <dl>
            <dt><var ignore>descriptor</var></dt>
            <dd>"storage-access-heuristics"</dd>
            <dt><var ignore>key</var></dt>
            <dd>|key|</dd>
            <dt><var ignore>current state</var></dt>
            <dd>"granted"</dd>
        </dl>
    2. Set the new permission's [=permission/lifetime=] to |duration|.

<div class=note>
This algorithm is based on [=request permission to use=], except for the following key differences:
- It sets a dynamic permission [=permission/lifetime=].
- It generates a [=permission key=] independently of the [=current settings object=].</div>

</div>

<h3 id="sa-heuristics-popup">Popup Heuristic</h3>

Append the following steps to the <a spec="html">activation notification</a>
steps in the [[HTML#user-activation-processing-model|user activation processing
model]]:

1. Run [=detect a popup heuristic=] given <var ignore>document</var>.

<div algorithm>

To <dfn>detect a popup heuristic</dfn> given a [=Document=] |document|,
perform the following steps:

1. Let |browsingContext| be |document|'s [=Document/browsing context=].
1. If |browsingContext|'s <var ignore>is popup</var> is false, then abort these steps.
1. If |browsingContext|'s <var ignore>opener origin at creation</var> is null, then abort these steps.
<!-- TODO: Chromium also checks if the popup was initiated from the main frame of the opener. -->
1. Let |navigable| be |document|'s [=node navigable=].
1. If |navigable| is null, then abort these steps.
1. Let |topDocument| be |navigable|'s [=top-level traversable=]'s
    [=navigable/active document=].
1. Let |origin| be |topDocument|'s [=Document/origin=].
1. If |origin| is an [=opaque origin=] then abort these steps.
1. Let |site| be the result of running [=obtain a site=] given |origin|.
1. Let |host| be |site|'s [=host=].
1. [=Grant access for heuristics=] given:
    <dl>
        <dt><var ignore>host</var></dt>
        <dd>|host|</dd>
        <dt><var ignore>firstPartyHost</var></dt>
        <dd>|browsingContext|'s <var ignore>opener origin at creation=</var></dd>
        <dt><var ignore>duration</var></dt>
        <dd>[=popup heuristic grant duration=]</dd>
    </dl>

</div>

<h3 id="sa-heuristics-redirect">Redirect Heuristic</h3>

Insert the following steps in the <a spec="html">load a document</a> algorithm,
before Step 5, "Return null", which is the point that the [=document=] is loaded.

1. Run [=detect a redirect heuristic=] given <var ignore>navigable</var>.

<div algorithm>

To <dfn>detect a redirect heuristic</dfn> given a navigable |navigable|,
perform the following steps:

1. Let |topDocument| be |navigable|'s [=top-level traversable=]'s
    [=navigable/active document=].
1. Let |firstPartyOrigin| be |topDocument|'s [=Document/origin=].
1. If |firstPartyOrigin| is an [=opaque origin=] then abort these steps.
1. Let |firstPartySite| be the result of running [=obtain a site=] given |firstPartyOrigin|.
1. Let |firstPartyHost| be |firstPartySite|'s [=host=].
1. Let |bounceTrackingRecord| be |navigable|'s [=top-level traversable=]'s <var ignore>bounce tracking record</var>.
1. [=list/For each=] |bounceUrl| in |bounceTrackingRecord|'s <var ignore>bounce set</var>:
  1. Let |bounceSite| be the result of running [=obtain a site=] given |bounceUrl|.
  1. Let |bounceHost| be |bounceSite|'s [=host=].
  1. If |bounceHost| [=host/equals=] |firstPartyHost|, [=iteration/continue=].
  <!-- TODO: Chromium also checks if |bounceUrl| has a transient activation. This will require patching bounce tracking record. -->
  <!-- TODO: Chromium also checks for an A-B-A user flow. This will require traversing the navigable's history. -->
  1. [=Grant access for heuristics=] given:
    <dl>
        <dt><var ignore>host</var></dt>
        <dd>|bounceHost|</dd>
        <dt><var ignore>firstPartyHost</var></dt>
        <dd>|firstPartyHost|<dd>
        <dt><var ignore>duration</var></dt>
        <dd>[=redirect heuristic grant duration=]</dd>
    </dl>

</div>
